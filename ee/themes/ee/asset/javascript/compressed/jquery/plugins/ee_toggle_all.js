/*!
 * This source file is part of the open source project
 * ExpressionEngine (https://expressionengine.com)
 *
 * @link      https://expressionengine.com/
 * @copyright Copyright (c) 2003-2018, EllisLab, Inc. (https://ellislab.com)
 * @license   https://expressionengine.com/license Licensed under Apache License, Version 2.0
 */
!function(e){e.fn.toggle_all=function(){function t(t){var c=t.find("tbody tr").get();t.data("table_config")&&t.bind("tableupdate",function(){c=t.table("get_current_data").html_rows,t.find("input:checkbox").prop("checked",!1).trigger("change")}),this.getColumn=function(t){return e.map(c,function(c,n){if(e(c.cells[t]).has("input[type=checkbox]").size())return c.cells[t]})}}var c={$table:"",rowCache:"",column:0,tableCells:[],shift:!1,init:function(e,t,c){this.$table=e,this.rowCache=t,this.column=c,this.tableCells=this.rowCache.getColumn(this.column),this.checkboxListen(),this.tableListen(),this.shiftListen()},checkboxListen:function(){var t=this;e(this.tableCells).each(function(c,n){e(this).find("input[type=checkbox]").unbind("click").click(function(n){if(currentlyChecked=t.checkboxChecked(c),t.shift&&currentlyChecked!==!1){var i=currentlyChecked>c?c:currentlyChecked,h=currentlyChecked>c?currentlyChecked:c;e(t.tableCells).slice(i,h).find("input[type=checkbox]").attr("checked",!0).trigger("change")}})})},tableListen:function(){var e=this;this.$table.bind("tableupdate",function(){e.tableCells=e.rowCache.getColumn(e.column),e.checkboxListen()})},shiftListen:function(){var t=this;e(window).bind("keyup keydown",function(e){t.shift=e.shiftKey})},checkboxChecked:function(t){if(e(this.tableCells).find("input[type=checkbox]").not(":eq("+t+")").find(":checked").size()>1)return!1;var c=0;return e(this.tableCells).each(function(n,i){if(n!==t&&e(this).find("input[type=checkbox]").is(":checked"))return c=n,!1}),c}};return this.each(function(){var n={checkboxes:{},add:function(e,t){return"undefined"==typeof this.checkboxes[e]&&(this.checkboxes[e]=[]),this.checkboxes[e].push(t),!0},get:function(e){return this.checkboxes[e]},each:function(t,c){e.each(this.checkboxes[t],function(t,n){c.call(e(n),t,n)})}},i=e(this),h=new t(i);i.find("th").has("input:checkbox").each(function(t,o){var r=this.cellIndex,s=e(this).find(":checkbox");e(this).on("click","input[type=checkbox]",function(t){var c=s.prop("checked");t.target!=s.get(0)&&(c=!c,s.prop("checked",c).trigger("change")),e(h.getColumn(r)).find(":checkbox:enabled").prop("checked",c).trigger("change"),n.each(r,function(){e(this).prop("checked",c).trigger("change")})}),n.add(r,s),c.init(i,h,r)}),i.delegate("td","click",function(t){var c=this.cellIndex,i=!0;return!n.get(c)||!e(t.target).is(":checkbox")||(t.target.checked?(e.each(h.getColumn(c),function(){if(!e(this).find(":checkbox").prop("checked"))return i=!1,!1}),void n.each(c,function(t,c){e(this).prop("checked",i).trigger("change")})):(n.each(c,function(t,c){e(this).prop("checked",!1).trigger("change")}),!0))})})}}(jQuery);